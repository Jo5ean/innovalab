---
import config from "../../config/config";
const { title } = config;
const titleArr = title.split(" | ");
const titleNameArr = titleArr[0].split(" ");
const titleName = titleNameArr[0];
const subTitleName = titleNameArr[1];
---

<header
    class="bg-transparent w-full flex flex-row items-center justify-between px-6 md:px-12 py-4 fixed top-0 z-50"
>
    <div class="flex flex-row items-center">
        <!-- Botón hamburguesa para mostrar miniaturas de slides -->
        <button id="slide-thumbnails-toggle" class="slide-menu-button" aria-label="Ver todas las diapositivas">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                <rect x="2" y="4" width="20" height="2" rx="1"/>
                <rect x="2" y="11" width="20" height="2" rx="1"/>
                <rect x="2" y="18" width="20" height="2" rx="1"/>
            </svg>
        </button>
    </div>
    
    <div class="flex items-center">
        <button
            id="go-to-home-slide"
            aria-label="Ir a la pantalla de inicio"
            class="home-button"
        >
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
            </svg>
        </button>
    </div>
</header>

<!-- Panel de miniaturas de slides -->
<div id="slides-thumbnails-panel" class="slides-thumbnails-panel">
    <div class="panel-header">
        <h3 class="panel-title">Secciones</h3>
        <button id="close-thumbnails-panel" class="close-button" aria-label="Cerrar panel">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
            </svg>
        </button>
    </div>
    <div class="thumbnail-list">
        <button class="thumbnail-item" data-slide="0">
            <div class="thumbnail-preview video-preview">
                <span class="thumbnail-icon">▶️</span>
            </div>
            <span class="thumbnail-label">Video Introductorio</span>
        </button>
        <button class="thumbnail-item" data-slide="1">
            <div class="thumbnail-preview buttons-preview">
                <span class="thumbnail-icon">🔍</span>
            </div>
            <span class="thumbnail-label">Consulta DNI</span>
        </button>
        <button class="thumbnail-item" data-slide="2">
            <div class="thumbnail-preview menu-preview">
                <span class="thumbnail-icon">📋</span>
            </div>
            <span class="thumbnail-label">Menú Principal</span>
        </button>
        <button class="thumbnail-item" data-slide="3">
            <div class="thumbnail-preview info-preview">
                <span class="thumbnail-icon">ℹ️</span>
            </div>
            <span class="thumbnail-label">Información</span>
        </button>
    </div>
</div>

<!-- Overlay para cuando el panel está abierto -->
<div id="panel-overlay" class="panel-overlay"></div>

<style>
    header {
        pointer-events: none; /* Para que no interfiera con el contenido debajo */
    }
    
    header > div, header button {
        pointer-events: auto; /* Permitir que los botones reciban eventos */
    }

    .slide-menu-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        border: none;
        color: white;
        transition: all 0.2s ease;
        cursor: pointer;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .slide-menu-button:hover {
        background-color: rgba(255, 255, 255, 0.3);
        transform: scale(1.05);
    }
    
    .home-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.2s ease;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }
    
    .home-button:hover {
        background-color: rgba(255, 255, 255, 0.3);
        transform: scale(1.05);
    }

    /* Panel de miniaturas */
    .slides-thumbnails-panel {
        position: fixed;
        top: 0;
        left: -300px;
        width: 300px;
        height: 100vh;
        background-color: white;
        box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        transition: left 0.3s ease;
        overflow-y: auto;
        padding: 20px 0;
        display: flex;
        flex-direction: column;
    }

    .slides-thumbnails-panel.active {
        left: 0;
    }

    .panel-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px 15px 20px;
        border-bottom: 1px solid #e0e0e0;
        margin-bottom: 15px;
    }

    .panel-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin: 0;
    }

    .close-button {
        background: none;
        border: none;
        cursor: pointer;
        color: #666;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .close-button:hover {
        color: #333;
    }

    .thumbnail-list {
        display: flex;
        flex-direction: column;
        gap: 12px;
        padding: 0 20px;
    }

    .thumbnail-item {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px;
        border-radius: 8px;
        background-color: #f9f9f9;
        border: 1px solid #e0e0e0;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: left;
    }

    .thumbnail-item:hover {
        background-color: #f0f0f0;
        transform: translateX(5px);
    }

    .thumbnail-item.active {
        background-color: #e3f2fd;
        border-color: #90caf9;
    }

    .thumbnail-preview {
        width: 60px;
        height: 60px;
        border-radius: 6px;
        background-color: #eee;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

    .thumbnail-icon {
        font-size: 24px;
    }

    .thumbnail-label {
        font-size: 0.9rem;
        font-weight: 500;
    }

    /* Fondos para las miniaturas */
    .video-preview {
        background-color: rgba(0, 0, 0, 0.7);
    }

    .buttons-preview {
        background: linear-gradient(135deg, #00235B 0%, #7B0000 100%);
    }

    .menu-preview {
        background: linear-gradient(135deg, #00235B 0%, #7B0000 100%);
        opacity: 0.8;
    }

    .info-preview {
        background-color: #f0f4f8;
    }

    /* Overlay del panel */
    .panel-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.3);
        z-index: 999;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
    }

    .panel-overlay.active {
        opacity: 1;
        pointer-events: auto;
    }

    /* Responsive */
    @media (max-width: 640px) {
        .slides-thumbnails-panel {
            width: 270px;
        }
    }
</style>

<script>
    // Script para controlar la interacción con el header y las miniaturas
    document.addEventListener('DOMContentLoaded', function() {
        // Elementos DOM
        const menuButton = document.getElementById('slide-thumbnails-toggle');
        const thumbnailsPanel = document.getElementById('slides-thumbnails-panel');
        const closeButton = document.getElementById('close-thumbnails-panel');
        const homeButton = document.getElementById('go-to-home-slide');
        const panelOverlay = document.getElementById('panel-overlay');
        const thumbnailButtons = document.querySelectorAll('.thumbnail-item');
        
        // Función para abrir el panel de miniaturas
        function openPanel() {
            if (thumbnailsPanel && panelOverlay) {
                thumbnailsPanel.classList.add('active');
                panelOverlay.classList.add('active');
                document.body.style.overflow = 'hidden'; // Evitar scroll en el body
            }
        }
        
        // Función para cerrar el panel de miniaturas
        function closePanel() {
            if (thumbnailsPanel && panelOverlay) {
                thumbnailsPanel.classList.remove('active');
                panelOverlay.classList.remove('active');
                document.body.style.overflow = ''; // Restaurar scroll
            }
        }
        
        // Agregar event listeners
        if (menuButton) {
            menuButton.addEventListener('click', openPanel);
        }
        
        if (closeButton) {
            closeButton.addEventListener('click', closePanel);
        }
        
        if (panelOverlay) {
            panelOverlay.addEventListener('click', closePanel);
        }
        
        // Establecer la miniatura activa según la diapositiva actual
        function updateActiveThumbnail(slideIndex: number) {
            thumbnailButtons.forEach((button, index) => {
                if (index === slideIndex) {
                    button.classList.add('active');
                } else {
                    button.classList.remove('active');
                }
            });
        }
        
        // Interacción con la instancia de Swiper
        // Detectamos si Swiper está disponible
        function getSwiperInstance() {
            // Buscamos la instancia de Swiper en el objeto window
            if (typeof window !== 'undefined') {
                // @ts-ignore
                const swiperContainer = document.querySelector('.main-swiper')?.swiper;
                return swiperContainer;
            }
            return null;
        }
        
        // Esperamos a que Swiper esté inicializado
        const checkSwiperInterval = setInterval(() => {
            const swiper = getSwiperInstance();
            if (swiper) {
                clearInterval(checkSwiperInterval);
                
                // Botón para ir a la slide de inicio (vídeo)
                if (homeButton) {
                    homeButton.addEventListener('click', () => {
                        swiper.slideTo(0);
                    });
                }
                
                // Botones de miniaturas
                thumbnailButtons.forEach(button => {
                    button.addEventListener('click', function() {
                        // @ts-ignore
                        const slideIndex = parseInt(this.getAttribute('data-slide') || '0');
                        swiper.slideTo(slideIndex);
                        closePanel();
                    });
                });
                
                // Actualizar miniatura activa cuando cambia la diapositiva
                swiper.on('slideChange', function() {
                    updateActiveThumbnail(swiper.activeIndex);
                });
                
                // Establecer la miniatura activa inicial
                updateActiveThumbnail(swiper.activeIndex);
            }
        }, 500);
        
        // Timeout para dejar de intentar encontrar Swiper después de un tiempo razonable
        setTimeout(() => clearInterval(checkSwiperInterval), 10000);
    });
</script>
